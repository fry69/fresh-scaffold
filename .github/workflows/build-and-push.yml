name: Build & Test (always) â†’ Publish (tags only)

# Trigger on pushes to main (for testing) and tag pushes (for publishing)
on:
  push:
    branches:
      - main
    tags:
      - "v*" # build & push only when a tag is pushed (e.g. v1.2.3)
  workflow_dispatch: # allow manual runs (optional)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # results in ghcr.io/owner/repo
  CONTAINERFILE: ./Containerfile

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write
  # if you later add a release-update step, you'll need 'contents: write' or a PAT

jobs:
  # First run the CI tests
  test:
    uses: ./.github/workflows/ci.yml

  build-and-publish:
    runs-on: ubuntu-latest
    needs: test
    # Always build for testing, but only push when it's a tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Optional but recommended for multi-arch
      # - name: Set up QEMU (emulation for other archs)
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.ref_type == 'tag'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Get git revision
        id: git
        run: |
          echo "revision=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Generate build string
        id: buildinfo
        run: |
          build_time=$(date -u '+%Y-%m-%dT%H:%M:%SZ')
          short_sha=$(git rev-parse --short HEAD)
          echo "build-time=${build_time}" >> $GITHUB_OUTPUT
          echo "short-sha=${short_sha}" >> $GITHUB_OUTPUT
          echo "build-string=${build_time}-${short_sha}" >> $GITHUB_OUTPUT

      - name: Build and conditionally push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.CONTAINERFILE }}
          push: ${{ github.ref_type == 'tag' }}  # Only push on tags
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_REVISION=${{ steps.git.outputs.revision }}
            BUILD_STRING=${{ steps.buildinfo.outputs.build-string }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Generate build attestation (provenance)
        if: github.ref_type == 'tag'  # Only create attestation when publishing
        id: attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Create Markdown build summary (job summary)
        if: github.ref_type == 'tag'  # Only create detailed summary when publishing
        id: write-summary
        run: |
          # Compose summary variables
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          TAGS="${{ steps.meta.outputs.tags }}"
          DIGEST="${{ steps.build-and-push.outputs.digest }}"
          BUILD_TIME="${{ steps.buildinfo.outputs.build-time }}"
          GIT_REVISION="${{ steps.git.outputs.revision }}"
          BUILD_STRING="${{ steps.buildinfo.outputs.build-string }}"
          ATTESTATION="${{ steps.attest.outputs.attestation-id }}"
          LABELS="${{ steps.meta.outputs.labels }}"

          # Create the markdown content once
          cat > build-summary.md <<EOF
          ## :package: Container publish summary

          | Property | Value |
          |----------|-------|
          | **Image** | \`${IMAGE}\` |
          | **Tags pushed** | \`${TAGS}\` |
          | **Digest** | \`${DIGEST}\` |
          | **Built at (UTC)** | \`${BUILD_TIME}\` |
          | **Commit** | \`${GIT_REVISION}\` |
          | **Build string** | \`${BUILD_STRING}\` |
          | **Attestation ID** | \`${ATTESTATION}\` |

          ### Labels (generated)
          \`\`\`
          ${LABELS}
          \`\`\`
          EOF

          # Copy the same content to the GitHub step summary
          cat build-summary.md >> $GITHUB_STEP_SUMMARY

      - name: Upload summary as artifact (optional)
        if: github.ref_type == 'tag'  # Only upload artifact when publishing
        uses: actions/upload-artifact@v4
        with:
          name: container-publish-summary
          path: build-summary.md
